{"remainingRequest":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zwind/Desktop/vue-element-admin-zwind/src/components/Pagination/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/src/components/Pagination/index.vue","mtime":1585556754669},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/babel-loader/lib/index.js","mtime":1585556748275},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js","mtime":1585556754247}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { scrollTo } from '@/utils/scroll-to'\n\nexport default {\n  name: 'Pagination',\n  props: {\n    total: {\n      required: true,\n      type: Number\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    limit: {\n      type: Number,\n      default: 20\n    },\n    pageSizes: {\n      type: Array,\n      default() {\n        return [10, 20, 30, 50]\n      }\n    },\n    layout: {\n      type: String,\n      default: 'total, sizes, prev, pager, next, jumper'\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true\n    },\n    hidden: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currentPage: {\n      get() {\n        return this.page\n      },\n      set(val) {\n        this.$emit('update:page', val)\n      }\n    },\n    pageSize: {\n      get() {\n        return this.limit\n      },\n      set(val) {\n        this.$emit('update:limit', val)\n      }\n    }\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit('pagination', { page: this.currentPage, limit: val })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    },\n    handleCurrentChange(val) {\n      this.$emit('pagination', { page: val, limit: this.pageSize })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    }\n  }\n}\n",null]}