{"remainingRequest":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zwind/Desktop/vue-element-admin-zwind/src/views/data-management/history.vue?vue&type=template&id=27c711be&","dependencies":[{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/src/views/data-management/history.vue","mtime":1585897934167},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1585556754248},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js","mtime":1585556754247}],"contextDependencies":[],"result":["\n<div>\n  <template>\n    <div class=\"app-container\">\n      <div class=\"filter-container\">\n        <span style=\"font-size:16px;margin-left:5px;\">班级</span>\n        <el-input v-model=\"listQuery.title\" :placeholder=\"$t('')\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n        <span style=\"font-size:16px;margin-left:5px;\">班主任</span>\n        <el-input v-model=\"listQuery.title\" :placeholder=\"$t('')\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n        <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n          {{ $t('查询') }}\n        </el-button>\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-refresh-left\" @click=\"handleModifyStatus\">\n          {{ $t('重置') }}\n        </el-button>\n        <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n          {{ $t('导出') }}\n        </el-button>\n      </div>\n\n      <el-table\n        :key=\"tableKey\"\n        v-loading=\"listLoading\"\n        :data=\"list\"\n        border\n        fit\n        highlight-current-row\n        style=\"width: 90.7%;\"\n        @sort-change=\"sortChange\"\n      >\n        <el-table-column :label=\"$t('序号')\" prop=\"id\" sortable=\"custom\" align=\"center\" width=\"80\" :class-name=\"getSortClass('id')\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('班级')\" width=\"180px\" align=\"center\">\n          <!-- <template slot-scope=\"{row}\">\n        <span>{{ row.classname }}</span>\n      </template> -->\n          <template>\n            <span>软件183</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('专业')\" width=\"180px\" align=\"center\">\n          <!-- <template slot-scope=\"{row}\">\n        <span>{{ row.major }}</span>\n      </template> -->\n          <template>\n            <span>软件技术</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('学院')\" width=\"180px\" align=\"center\">\n          <!-- <template slot-scope=\"{row}\">\n        <span>{{ row.college }}</span>\n      </template> -->\n          <template>\n            <span>信息学院</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('班主任')\" width=\"100px\" align=\"center\">\n          <!-- <template slot-scope=\"{row}\">\n        <span>{{ row.teacher }}</span>\n      </template> -->\n          <template>\n            <span>黄博闻</span>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('table.status')\" class-name=\"status-col\" width=\"100\">\n          <template slot-scope=\"{row}\">\n            <el-tag :type=\"row.status | statusFilter\">\n              {{ row.status }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column :label=\"$t('查看')\" align=\"center\" width=\"100\" class-name=\"small-padding fixed-width\">\n          <el-button type=\"primary\" style=\"margin-left: 16px;\" @click=\"drawer = true\">\n            详情\n          </el-button>\n\n          <el-drawer\n            title=\"我是标题\"\n            :visible.sync=\"drawer\"\n            :direction=\"direction\"\n            :before-close=\"handleClose\"\n          >\n            <span>我来啦!</span>\n          </el-drawer>\n        </el-table-column></el-table></el-table-column></div>\n  </template>\n  <script>\n    import { fetchList, fetchPv, createArticle, updateArticle } from '@/api/article'\n    import waves from '@/directive/waves' // waves directive\n    import { parseTime } from '@/utils'\n    import Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\n    const calendarTypeOptions = [\n    { key: 'CN', display_name: 'China' },\n    { key: 'US', display_name: 'USA' },\n    { key: 'JP', display_name: 'Japan' },\n    { key: 'EU', display_name: 'Eurozone' }\n    ]\n\n    // arr to obj, such as { CN : \"China\", US : \"USA\" }\n    const calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name\n    return acc\n    }, {})\n\n    export default {\n    name: 'ComplexTable',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n    statusFilter(status) {\n    const statusMap = {\n    published: 'success',\n    draft: 'info',\n    deleted: 'danger'\n    }\n    return statusMap[status]\n    },\n    typeFilter(type) {\n    return calendarTypeKeyValue[type]\n    }\n    },\n    data() {\n    return {\n    tableKey: 0,\n    list: null,\n    total: 0,\n    listLoading: true,\n    listQuery: {\n    page: 1,\n    limit: 20,\n    importance: undefined,\n    title: undefined,\n    type: undefined,\n    sort: '+id',\n    num1: 1,\n    num2: 2,\n    num3: 3,\n    value: new Date(),\n    drawer: false,\n    direction: 'rtl'\n    },\n    importanceOptions: [1, 2, 3],\n    calendarTypeOptions,\n    sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n    statusOptions: ['待办', '完成', '删除'],\n    showReviewer: false,\n    temp: {\n    id: undefined,\n    importance: 1,\n    remark: '',\n    timestamp: new Date(),\n    title: '',\n    type: '',\n    status: '待办'\n    },\n    form: {\n    name: '',\n    region: '',\n    date1: '',\n    date2: '',\n    delivery: false,\n    type: [],\n    resource: '',\n    desc: ''\n    },\n    dialogFormVisible: false,\n    dialogStatus: '',\n    textMap: {\n    update: '检查详情',\n    create: 'Create'\n    },\n    dialogPvVisible: false,\n    pvData: [],\n    rules: {\n    type: [{ required: true, message: 'type is required', trigger: 'change' }],\n    timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n    title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n    },\n    downloadLoading: false\n    }\n    },\n    created() {\n    this.getList()\n    },\n    methods: {\n    getList() {\n    this.listLoading = true\n    fetchList(this.listQuery).then(response => {\n    this.list = response.data.items\n    this.total = response.data.total\n    handleClose(done) {\n    this.$confirm('确认关闭？')\n    .then(_ => {\n    done()\n    // Just to simulate the time of the request\n    setTimeout(() => {\n    this.listLoading = false\n    }, 1.5 * 1000)\n    })\n    },\n    handleFilter() {\n    this.listQuery.page = 1\n    this.getList()\n    },\n    handleModifyStatus(row, status) {\n    this.$message({\n    message: '操作成功',\n    type: 'success'\n    })\n    row.status = status\n    },\n    sortChange(data) {\n    const { prop, order } = data\n    if (prop === 'id') {\n    this.sortByID(order)\n    }\n    },\n    sortByID(order) {\n    if (order === 'ascending') {\n    this.listQuery.sort = '+id'\n    } else {\n    this.listQuery.sort = '-id'\n    }\n    this.handleFilter()\n    },\n    resetTemp() {\n    this.temp = {\n    id: undefined,\n    importance: 1,\n    remark: '',\n    timestamp: new Date(),\n    title: '',\n    status: '完成',\n    type: ''\n    }\n    },\n    handleCreate() {\n    this.resetTemp()\n    this.dialogStatus = 'create'\n    this.dialogFormVisible = true\n    this.$nextTick(() => {\n    this.$refs['dataForm'].clearValidate()\n    })\n    },\n    createData() {\n    this.$refs['dataForm'].validate((valid) => {\n    if (valid) {\n    this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\n    this.temp.class = 'vue-element-admin'\n    createArticle(this.temp).then(() => {\n    this.list.unshift(this.temp)\n    this.dialogFormVisible = false\n    this.$notify({\n    title: '成功',\n    message: '创建成功',\n    type: 'success',\n    duration: 2000\n    })\n    })\n    }\n    })\n    },\n    handleUpdate(row) {\n    this.temp = Object.assign({}, row) // copy obj\n    this.temp.timestamp = new Date(this.temp.timestamp)\n    this.dialogStatus = 'update'\n    this.dialogFormVisible = true\n    this.$nextTick(() => {\n    this.$refs['dataForm'].clearValidate()\n    })\n    },\n    updateData() {\n    this.$refs['dataForm'].validate((valid) => {\n    if (valid) {\n    const tempData = Object.assign({}, this.temp)\n    tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n    updateArticle(tempData).then(() => {\n    const index = this.list.findIndex(v => v.id === this.temp.id)\n    this.list.splice(index, 1, this.temp)\n    this.dialogFormVisible = false\n    this.$notify({\n    title: '成功',\n    message: '更新成功',\n    type: 'success',\n    duration: 2000\n    })\n    })\n    }\n    })\n    },\n    handleDelete(row, index) {\n    this.$notify({\n    title: '成功',\n    message: '删除成功',\n    type: 'success',\n    duration: 2000\n    })\n    this.list.splice(index, 1)\n    },\n    handleChange(value) {\n    console.log(value)\n    },\n    handleFetchPv(pv) {\n    fetchPv(pv).then(response => {\n    this.pvData = response.data.pvData\n    this.dialogPvVisible = true\n    })\n    },\n    handleDownload() {\n    this.downloadLoading = true\n    import('@/vendor/Export2Excel').then(excel => {\n    const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n    const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n    const data = this.formatJson(filterVal)\n    excel.export_json_to_excel({\n    header: tHeader,\n    data,\n    filename: 'table-list'\n    })\n    this.downloadLoading = false\n    })\n    },\n    formatJson(filterVal) {\n    return this.list.map(v => filterVal.map(j => {\n    if (j === 'timestamp') {\n    return parseTime(v[j])\n    } else {\n    return v[j]\n    }\n    }))\n    },\n    getSortClass: function(key) {\n    const sort = this.listQuery.sort\n    return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n    }\n    }\n  </script>\n</div>",null]}