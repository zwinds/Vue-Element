{"remainingRequest":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zwind/Desktop/vue-element-admin-zwind/src/views/icons/index.vue?vue&type=template&id=79bf621a&scoped=true&","dependencies":[{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/src/views/icons/index.vue","mtime":1585556754700},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1585556754248},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js","mtime":1585556754247}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"icons-container\" },\n    [\n      _vm._m(0),\n      _vm._v(\" \"),\n      _c(\n        \"el-tabs\",\n        { attrs: { type: \"border-card\" } },\n        [\n          _c(\"el-tab-pane\", { attrs: { label: \"Icons\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"grid\" },\n              _vm._l(_vm.svgIcons, function(item) {\n                return _c(\n                  \"div\",\n                  {\n                    key: item,\n                    on: {\n                      click: function($event) {\n                        _vm.handleClipboard(_vm.generateIconCode(item), $event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"el-tooltip\", { attrs: { placement: \"top\" } }, [\n                      _c(\n                        \"div\",\n                        { attrs: { slot: \"content\" }, slot: \"content\" },\n                        [\n                          _vm._v(\n                            \"\\n              \" +\n                              _vm._s(_vm.generateIconCode(item)) +\n                              \"\\n            \"\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"icon-item\" },\n                        [\n                          _c(\"svg-icon\", {\n                            attrs: {\n                              \"icon-class\": item,\n                              \"class-name\": \"disabled\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(item))])\n                        ],\n                        1\n                      )\n                    ])\n                  ],\n                  1\n                )\n              }),\n              0\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"el-tab-pane\", { attrs: { label: \"Element-UI Icons\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"grid\" },\n              _vm._l(_vm.elementIcons, function(item) {\n                return _c(\n                  \"div\",\n                  {\n                    key: item,\n                    on: {\n                      click: function($event) {\n                        _vm.handleClipboard(\n                          _vm.generateElementIconCode(item),\n                          $event\n                        )\n                      }\n                    }\n                  },\n                  [\n                    _c(\"el-tooltip\", { attrs: { placement: \"top\" } }, [\n                      _c(\n                        \"div\",\n                        { attrs: { slot: \"content\" }, slot: \"content\" },\n                        [\n                          _vm._v(\n                            \"\\n              \" +\n                              _vm._s(_vm.generateElementIconCode(item)) +\n                              \"\\n            \"\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"icon-item\" }, [\n                        _c(\"i\", { class: \"el-icon-\" + item }),\n                        _vm._v(\" \"),\n                        _c(\"span\", [_vm._v(_vm._s(item))])\n                      ])\n                    ])\n                  ],\n                  1\n                )\n              }),\n              0\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"aside\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href:\n              \"https://panjiachen.github.io/vue-element-admin-site/guide/advanced/icon.html\",\n            target: \"_blank\"\n          }\n        },\n        [_vm._v(\"Add and use\\n    \")]\n      )\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}