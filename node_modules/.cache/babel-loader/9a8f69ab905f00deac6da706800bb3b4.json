{"remainingRequest":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/babel-loader/lib/index.js!/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zwind/Desktop/vue-element-admin-zwind/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/src/views/login/index.vue","mtime":1585564623879},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/babel-loader/lib/index.js","mtime":1585556748275},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/cache-loader/dist/cjs.js","mtime":1585556748495},{"path":"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/vue-loader/lib/index.js","mtime":1585556754247}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zwind/Desktop/vue-element-admin-zwind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _LangSelect = _interopRequireDefault(require(\"@/components/LangSelect\"));\n\nvar _SocialSignin = _interopRequireDefault(require(\"./components/SocialSignin\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Login',\n  components: {\n    LangSelect: _LangSelect.default,\n    SocialSign: _SocialSignin.default\n  },\n  data: function data() {\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.validUsername)(value)) {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 1) {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        username: 'admin',\n        password: 'admin'\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      passwordType: 'password',\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {}\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        var query = route.query;\n\n        if (query) {\n          this.redirect = query.redirect;\n          this.otherQuery = this.getOtherQuery(query);\n        }\n      },\n      immediate: true\n    }\n  },\n  created: function created() {// window.addEventListener('storage', this.afterQRScan)\n  },\n  mounted: function mounted() {\n    if (this.loginForm.username === '') {\n      this.$refs.username.focus();\n    } else if (this.loginForm.password === '') {\n      this.$refs.password.focus();\n    }\n  },\n  destroyed: function destroyed() {// window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    checkCapslock: function checkCapslock(e) {\n      var key = e.key;\n      this.capsTooltip = key && key.length === 1 && key >= 'A' && key <= 'Z';\n    },\n    showPwd: function showPwd() {\n      var _this = this;\n\n      if (this.passwordType === 'password') {\n        this.passwordType = '';\n      } else {\n        this.passwordType = 'password';\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n\n          _this2.$store.dispatch('user/login', _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.redirect || '/',\n              query: _this2.otherQuery\n            });\n\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        } else {\n          console.log('登录失败');\n          return false;\n        }\n      });\n    },\n    getOtherQuery: function getOtherQuery(query) {\n      return Object.keys(query).reduce(function (acc, cur) {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur];\n        }\n\n        return acc;\n      }, {});\n    }\n  }\n};\nexports.default = _default;",null]}